paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      responses:
        '200':
          description: Productos obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'
        '500':
          description: Error interno del servidor

    post:
      summary: Crea un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/createProduct'
      responses:
        '201':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        '400':
          description: Error en la solicitud
        '500':
          description: Error interno del servidor

  /api/products/productPaginate:
    get:
      summary: Obtiene productos paginados
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
          description: Número máximo de productos a devolver por página
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Número de página
        - in: query
          name: category
          schema:
            type: string
          description: Filtra productos por categoría
      responses:
        '200':
          description: Productos obtenidos correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPaginate'
        '500':
          description: Error interno del servidor

  /api/products/mockinproducts:
    get:
      summary: Crea productos ficticios
      tags:
        - Products
      responses:
        '200':
          description: Productos ficticios creados correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Products'
        '500':
          description: Error interno del servidor

  /api/products/{pid}:
    get:
      summary: Obtiene un producto por su ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto a obtener
      responses:
        '200':
          description: Producto obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor

    put:
      summary: Actualiza un producto existente
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
      responses:
        '200':
          description: Producto actualizado correctamente
        '400':
          description: Error en la solicitud
        '500':
          description: Error interno del servidor

    delete:
      summary: Elimina un producto
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto a eliminar
      responses:
        '200':
          description: Producto eliminado correctamente
        '401':
          description: Producto no encontrado en la base de datos
        '500':
          description: Error interno del servidor

components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado del producto
        title:
          type: string
          description: Título del producto
        code:
          type: string
          description: Código del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          format: float
          description: Precio del producto
        stock:
          type: integer
          description: Cantidad en stock del producto
        category:
          type: string
          description: Categoría del producto
        thumbnails:
          type: array
          items:
            type: string
          description: Lista de URL de las imágenes del producto
      example:
        _id: "60f0dca27c9a2b3ef0c86324"
        title: "Producto de ejemplo"
        code: "PROD001"
        description: "Este es un producto de ejemplo"
        price: 29.99
        stock: 100
        category: "Electrónicos"
        thumbnails:
          - "https://example.com/image1.jpg"
          - "https://example.com/image2.jpg"

    ProductPaginate:
      type: object
      properties:
        docs:
          type: array
          items:
            $ref: '#/components/schemas/Products'
          description: Lista de productos de la página actual
        hasPrevPage:
          type: boolean
          description: Indica si hay una página anterior
        hasNextPage:
          type: boolean
          description: Indica si hay una página siguiente
        prevPage:
          type: number
          description: Número de la página anterior
        nextPage:
          type: number
          description: Número de la página siguiente
        page:
          type: number
          description: Número de la página actual

  requestBodies:
    createProduct:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: Título del producto
              code:
                type: string
                description: Código del producto
              description:
                type: string
                description: Descripción del producto
              price:
                type: number
                format: float
                description: Precio del producto
              stock:
                type: integer
                description: Cantidad en stock del producto
              category:
                type: string
                description: Categoría del producto
              thumbnails:
                type: array
                items:
                  type: string
                description: Lista de URL de las imágenes del producto
              isActive:
                type: boolean
                description: Indica si el producto está activo
            required:
              - title
              - code
              - description
              - price
              - stock
              - category
            example:
              title: "Nuevo Producto"
              code: "PROD002"
              description: "Este es un nuevo producto"
              price: 39.99
              stock: 50
              category: "Electrodomésticos"
              thumbnails:
                - "https://example.com/image1.jpg"
                - "https://example.com/image2.jpg"